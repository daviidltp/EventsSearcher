---
const { procesionId = 'borriquita' } = Astro.params;
const MARTOS_CENTER = [37.7219, -3.9699];
---

<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <title>Mapa GPS Dual</title>
    <link
      rel="stylesheet"
      href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
      crossorigin=""
    />
    <style>
      #map {
        width: 100%;
        height: 100vh;
        margin: 0;
        padding: 0;
      }
      body, html {
        margin: 0;
        padding: 0;
        height: 100%;
      }
    </style>
  </head>
  <body>
    <div id="map"></div>

    <script
      is:inline
      src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
      crossorigin=""
    ></script>

    <script is:inline define:vars={{ MARTOS_CENTER, procesionId }}>
      // Inicializa el mapa en el centro de Martos
      const map = L.map('map').setView(MARTOS_CENTER, 16);
      L.tileLayer(
        'https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png',
        { maxZoom: 19 }
      ).addTo(map);

      let gpsMarker1 = null;
      let gpsMarker2 = null;

      // Íconos para cada GPS
      const icon1 = L.divIcon({
        html: `<div style="
          width:14px; height:14px;
          background:red;
          border:2px solid white;
          border-radius:50%;
        "></div>`,
        iconSize: [18, 18],
        iconAnchor: [9, 9],
      });
      const icon2 = L.divIcon({
        html: `<div style="
          width:14px; height:14px;
          background:blue;
          border:2px solid white;
          border-radius:50%;
        "></div>`,
        iconSize: [18, 18],
        iconAnchor: [9, 9],
      });

      // Actualiza ambos marcadores cada 5 segundos
      async function updateGpsMarkers() {
        try {
          // Obtener ambas últimas ubicaciones en paralelo
          const [res1, res2] = await Promise.all([
            fetch('https://owntracks-api.semanasantatracker.workers.dev/last-location'),
            fetch('https://owntracks-api.semanasantatracker.workers.dev/last-location-2')
          ]);
          const data1 = await res1.json();
          const data2 = await res2.json();
          const pos1 = [data1.lat, data1.lon];
          const pos2 = [data2.lat, data2.lon];

          // Marker rojo (last-location)
          if (!gpsMarker1) {
            gpsMarker1 = L.marker(pos1, { icon: icon1 }).addTo(map);
          } else {
            gpsMarker1.setLatLng(pos1);
          }

          // Marker azul (last-location-2)
          if (!gpsMarker2) {
            gpsMarker2 = L.marker(pos2, { icon: icon2 }).addTo(map);
          } else {
            gpsMarker2.setLatLng(pos2);
          }

          // Centrar la vista la primera vez en marker1

        } catch (err) {
          console.error('Error actualizando GPS:', err);
        } finally {
          setTimeout(updateGpsMarkers, 5000);
        }
      }

      window.addEventListener('load', updateGpsMarkers);
    </script>
  </body>
</html>
