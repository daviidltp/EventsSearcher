---
// RouteMap.astro - versión personalizable
interface Props {
  route: Array<[number, number]>;
  height?: string;
  routeColor?: string;      // Color de la ruta completa
  activeColor?: string;     // Color de la parte animada
  routeWeight?: number;     // Grosor de la línea de ruta
  activeWeight?: number;    // Grosor de la línea animada
  animationSpeed?: number;  // Velocidad en ms
  showMarkers?: boolean;    // Mostrar marcadores de inicio/fin
}

const { 
  route, 
  height = "400px",
  routeColor = "#999999",
  activeColor = "#0066ff",
  routeWeight = 3,
  activeWeight = 5,
  animationSpeed = 200,
  showMarkers = true
} = Astro.props;

const routeJSON = JSON.stringify(route);
const options = JSON.stringify({
  routeColor,
  activeColor,
  routeWeight,
  activeWeight,
  animationSpeed,
  showMarkers
});
---

<div id="map" style={`height: ${height}; width: 100%;`}></div>

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
<script is:inline src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

<script define:vars={{ routeJSON, options }}>
  const route = JSON.parse(routeJSON);
  const opts = JSON.parse(options);
  
  window.onload = function() {
    // Crear mapa
    const map = L.map('map').setView(route[0], 13);
    
    // Añadir capa base (puedes cambiar el estilo del mapa aquí)
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>'
    }).addTo(map);
    
    // Crear polyline para toda la ruta con color personalizado
    const fullRoute = L.polyline(route, {
      color: opts.routeColor,
      weight: opts.routeWeight
    }).addTo(map);
    
    // Ajustar vista
    map.fitBounds(fullRoute.getBounds());
    
    // Animación con color personalizado
    const animatedLine = L.polyline([], {
      color: opts.activeColor,
      weight: opts.activeWeight
    }).addTo(map);
    
    // Marcadores personalizados
    if (opts.showMarkers) {
      // Marcador de inicio (verde)
      L.marker(route[0], {
        icon: L.divIcon({
          className: 'custom-marker start-marker',
          html: '<div style="background-color: green; width: 12px; height: 12px; border-radius: 50%; border: 2px solid white;"></div>',
          iconSize: [16, 16]
        })
      }).addTo(map).bindTooltip("Inicio");
      
      // Marcador de fin (rojo)
      L.marker(route[route.length - 1], {
        icon: L.divIcon({
          className: 'custom-marker end-marker',
          html: '<div style="background-color: red; width: 12px; height: 12px; border-radius: 50%; border: 2px solid white;"></div>',
          iconSize: [16, 16]
        })
      }).addTo(map).bindTooltip("Fin");
    }
    
    // Punto que se mueve (marcador animado)
    const marker = L.marker(route[0]).addTo(map);
    
    // Animación con velocidad personalizada
    let i = 0;
    function animate() {
      if (i < route.length) {
        animatedLine.addLatLng(route[i]);
        marker.setLatLng(route[i]);
        i++;
        setTimeout(animate, opts.animationSpeed);
      }
    }
    
    setTimeout(animate, 1000);
  };
</script>